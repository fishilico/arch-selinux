name: Build

on:
  push:
    branches:
      - master
      - github-actions
    paths:
    - 'Dockerfile'
    - 'build_and_install_all.sh'
    - 'clean.sh'
    - 'recv_gpg_keys.sh'
    - '*/PKGBUILD'
    - '.github/workflows/main.yml'
  workflow_dispatch:

jobs:
  build_all_packages:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build and install Arch Linux's SELinux support packages in a docker container
        run: docker build -t arch-selinux-build .
      - name: Run the container - built packages are transferred to build host
        run: docker run -v "$(pwd)/pkgs:/packages" --rm arch-selinux-build
      - name: Upload packages as artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Arch Linux packages for SELinux support
          path: pkgs

  test_packages_bootstrap_qemu:
    runs-on: ubuntu-latest
    needs: build_all_packages
    steps:
      - name: Install QEMU to the runner and make needed directories
        run: |
          sudo apt-get install qemu
          mkdir -v repo /tmp/{boots,arch}

      - name: Download latest ArchISO bootstrap image
        run: curl https://mirror.pkgbuild.com/iso/latest/archlinux-bootstrap-2020.12.01-x86_64.tar.gz --output archbootstrap.tar.gz

      - name: Extract the archlinux-bootstrap to a directory
        run: sudo tar xf archbootstrap.tar.gz -C /tmp/boots --strip-components 1

      - name: Create new raw image for Arch Linux and mount it as a loop device
        run: |
          qemu-img create -f raw archlinux.raw 8G
          sudo losetup --show -f -P archlinux.raw
          sudo parted /dev/loop0 mklabel msdos
          sudo parted -a optimal /dev/loop0 mkpart primary 0% 100%
          sudo parted /dev/loop0 set 1 boot on
          sudo mkfs.ext4 /dev/loop0p1
          sudo mount /dev/loop0p1 /tmp/arch

      - name: Get the SELinux packages
        uses: actions/download-artifact@v2
        with:
          name: Arch Linux packages for SELinux support
          path: repo

      - name: Copy the SELinux packages to bootstrap mount
        run: sudo cp -v repo/* /tmp/boots/var/cache/pacman/pkg

      - name: Chroot into the arch-bootstrap directory and install Arch with SELinux support to loop mounted raw image
        run: |
          sudo /tmp/boots/usr/bin/arch-chroot /tmp/boots /bin/bash -c \
           'pacman-key --init;
            pacman-key --populate archlinux;
            mount /dev/loop0p1 /mnt;
            echo "Server = https://mirror.pkgbuild.com/\$repo/os/\$arch" >> /etc/pacman.d/mirrorlist;
            echo -e "[selinux-testing]\nSigLevel = Never\nServer = file:///var/cache/pacman/pkg" >> /etc/pacman.conf;
            repo-add /var/cache/pacman/pkg/selinux-testing.db.tar.xz /var/cache/pacman/pkg/*;
            pacstrap /mnt base-selinux linux grub'

      - name: Work on the loop mounted raw image
        run: |
          sudo /tmp/boots/usr/bin/arch-chroot /tmp/arch /bin/bash -c \
           'ls -la;
            cat /etc/pacman.d/mirrorlist;
            lsblk'



